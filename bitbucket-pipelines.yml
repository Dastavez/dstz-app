#Docker image for ionic <https://github.com/alphayax/docker-ionic-android-sdk>
image: alphayax/docker-ionic-android-sdk
image: node:10.16.0

pipelines:
    custom:
        01-pwa-deployment-to-firebase:
            - step:
                  name: Build and deploy to firebase
                  deployment: staging
                  caches:
                      - node
                      - pip
                  script:
                      # install dependencies
                      - npm install -g ionic cordova
                      - npm install -g firebase-tools
                      - npm install

                      # build pwa
                      - ionic build --prod

                      # deploy to firebase
                      - firebase deploy --token=$FIREBASE_TOKEN --non-interactive

                      # upload to s3
                      - apt-get update
                      - yes Y | apt install python3-pip
                      - pip3 install --upgrade awscli
                      - VERSION_DATE=$(date +%F)
                      - echo $VERSION_DATE
                      - AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY aws s3 sync www s3://$S3_BUCKET_NAME/PWA/$VERSION_DATE/ --acl bucket-owner-full-control --acl public-read --delete

        02-create-apk-and-upload-to-s3:
            - step:
                  name: Build apk
                  caches:
                      - node
                  script:
                      #install npm packages
                      - npm install -g ionic cordova
                      - npm install

                      #build apk
                      - yes | /opt/android-sdk/tools/bin/sdkmanager --licenses || true
                      - ionic cordova build android --prod
                  artifacts:
                      - platforms/android/app/build/outputs/apk/debug/*.apk
            - step:
                  name: upload to s3
                  deployment: staging
                  caches:
                      - pip
                  script:
                      - apt-get update
                      - yes Y | apt install python3-pip
                      - pip3 install --upgrade awscli
                      - VERSION_DATE=$(date +%F)
                      - echo $VERSION_DATE
                      - AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY aws s3 cp platforms/android/app/build/outputs/apk/debug/*.apk s3://$S3_BUCKET_NAME/ANDROID/$VERSION_DATE/ --acl bucket-owner-full-control --acl public-read

        03-run-unit-test:
            - step:
                  name: Run Tests
                  script:
                       #install npm packages
                      - npm install -g ionic cordova
                      - npm install
                      - >
                          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - && \
                              sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list' && \
                              apt-get update && \
                              apt-get install -y google-chrome-stable xvfb procps
                      - npm run test:ci

definitions:
    services:
    docker:
      memory: 4096
    caches:
        android-sdk: android-sdk
